{"version":3,"sources":["components/Scroll.js","components/Card.js","components/Cardlist.js","components/Searchbox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","style","overflowY","border","height","this","props","children","React","Component","Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","Searchbox","searchfield","onsearch","type","placeholder","onChange","ErrorBoundry","ob","hasError","error","info","setState","App","onsearchchange","event","target","value","state","fetch","then","response","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAagBA,E,4JAThB,WACU,OACS,qBAAKC,MAAO,CAACC,UAAW,SAAWC,OAAQ,kBAAmBC,OAAO,SAArE,SACMC,KAAKC,MAAMC,e,GALfC,IAAMC,WCkBZC,EAjBF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAGpB,OACI,sBAAKC,UAAU,qDAAf,UAEA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCYLK,EAtBE,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAKX,OACQ,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GAEb,OACY,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCL9BC,EAPG,SAAC,GAA0B,EAAzBC,YAA0B,IAAdC,EAAa,EAAbA,SAC5B,OACQ,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCuBzGI,E,kDAzBX,WAAYtB,GACX,IAAD,8BACI,cAAMA,IACDuB,GAAG,CACJC,UAAS,GAHjB,E,qDAMA,SAAkBC,EAAMC,GAEhB3B,KAAK4B,SAAS,CAACH,UAAS,M,oBAEpC,WAEI,OADiBzB,KAAKwB,GAAfC,SAEA,iDAGQ,8BACEzB,KAAKC,MAAMC,e,GAnBHC,IAAMC,WCmDpByB,G,wDA3CX,aAAc,IAAD,8BACT,gBAMJC,eAAe,SAACC,GACZ,EAAKH,SAAS,CAACV,YAAaa,EAAMC,OAAOC,SAN7C,EAAKC,MAAM,CACXrB,OAAQ,GACRK,YAAY,IAJC,E,qDAYb,WACC,IAAD,OACIiB,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACf,OAAO0B,S,oBAExC,WACG,MAA4BvC,KAAKkC,MAA1BrB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACRsB,EAAgB3B,EAAO4B,QAAO,SAAAC,GAChC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS1B,EAAYyB,kBAEzD,OAAQ9B,EAAOgC,OAGP,sBAAKpC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,SAAUnB,KAAK8B,iBAC1B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ2B,WAPlC,oBAAI/B,UAAU,KAAd,yB,GAzBUN,IAAMC,YCGT0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ad6d5583.chunk.js","sourcesContent":["import React from 'react';\r\n \r\nclass Scroll extends React.Component{\r\n  \r\nrender() {\r\n          return (\r\n                   <div style={{overflowY: 'scroll' , border: '5px solid black', height:'800px'}}>\r\n                        {this.props.children}\r\n                   </div>\r\n                  );\r\n         }\r\n    \r\n}\r\nexport default  Scroll;","import React from 'react';\r\n\r\n\r\nconst Card = ({name, email, id})=>{\r\n \r\n        \r\n        return (\r\n            <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow5'>\r\n\r\n            <img alt='robots' src={`https://robohash.org/${id}?200X200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div> \r\n        );\r\n        \r\n        \r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nconst Cardlist = ({robots})=>{\r\n    // if(true)\r\n    // {\r\n    //     throw new Error('NOOOOOO');\r\n    // }\r\n        return(\r\n                <div>\r\n                    {\r\n                        robots.map((user,i) =>\r\n                        {\r\n                            return (\r\n                                        <Card \r\n                                        key={i} \r\n                                        id={robots[i].id} \r\n                                        name={robots[i].name} \r\n                                        email={robots[i].email}/>\r\n                                    )\r\n                         })\r\n                    }\r\n                </div>\r\n        )\r\n}\r\nexport default Cardlist;","import React from \"react\";\r\n\r\nconst Searchbox = ({searchfield,onsearch}) =>{\r\n    return (\r\n            <div className='pa2'>\r\n                <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' onChange={onsearch}/>\r\n            </div>\r\n    )\r\n}\r\nexport default Searchbox;","import React from 'react';\r\n \r\nclass  ErrorBoundry  extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.ob={\r\n            hasError:false\r\n        };\r\n    }\r\n    componentDidCatch(error,info)\r\n    {\r\n            this.setState({hasError:true});\r\n    }\r\nrender() {\r\n    const {hasError}=this.ob;\r\n    if(hasError)\r\n    return <h1>OOpppssss......</h1>\r\n    else{\r\n          return (\r\n                   <div>\r\n                    {this.props.children}\r\n                   </div>\r\n                  );\r\n         }\r\n        }\r\n    \r\n}\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll'\r\nimport Cardlist from '../components/Cardlist';\r\nimport Searchbox from '../components/Searchbox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nimport 'tachyons';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n    this.state={\r\n    robots: [],\r\n    searchfield:''\r\n        }\r\n    }\r\n    onsearchchange=(event)=>{\r\n        this.setState({searchfield: event.target.value})\r\n        \r\n        \r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then( response => response.json())\r\n        .then(users =>this.setState({robots:users}))\r\n    }\r\n    render(){\r\n       const {robots, searchfield}=this.state;\r\n        const filteredrobots= robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ?\r\n        <h1 className='tc'>Loading</h1> :\r\n             (\r\n                <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <Searchbox onsearch={this.onsearchchange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <Cardlist robots={filteredrobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n                \r\n            </div>\r\n            )\r\n        }\r\n\r\n           \r\n    }\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}